# -*- coding: utf-8 -*-
"""03 Strings.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15r8OP81FaFnkXxkI6sLvfZij0MKHLxZ4

# String
Son el tipo de dato que incluye textos. Cualquier informacion escrita como un texto es considerado como un "**string**"
"""

letra = 'p'                    #una sola letra puede considerarse un string
print(letra)                   
print(len(letra))              #podemos calcular 
saludo = 'hello world'        #un string puede ser una palabra
print(saludo)                  #hello world
print(len(saludo))             #13
oracion = "hope you are enjoying 30 days of python challenge"
print(oracion)
print(len(oracion))

"""Tambien podemos crear strings multilineas haciendo uso de tres comillas simples(') o tres pares de comillas dobles(")"""

multiline_string = '''Pac man originalmente se llamaba puck man.
lo cambiaron no porque  pac - man fuera redondo.
paku paku significa abrir y cerrar la boca y tuvieron miedo de que la gente tachara la 'p' y
la convirtiera en 'f' '''
print(multiline_string)

"""Otra forma de hacer exactamente lo mismo es haciendo uso de tres pares de comillas dobles(")"""

multiline_string = """Pac man originalmente se llamaba puck man.
lo cambiaron no porque  pac - man fuera redondo.
paku paku significa abrir y cerrar la boca y tuvieron miedo de que la gente tachara la 'p' y
la convirtiera en "f" """
print(multiline_string)

"""# **Secuencias de escape**

*  \n. Linea nueva
*  \t:Tabulacion(8 espacios)
*  \back slash 
*  ':single quote(')
*  ":Double quote(")
"""

print('Este es un ejemplo de salto de linea.\nÂ¿lo notas?') # line break
print('Dia\tTemas\tEjersicios') #agregando una tabulacion
print('Dia 1\t3\t5')
print('Dia 2\t3\t5')
print('Dia 3\t3\t5')
print('Dia 4\t3\t5')
print('este es un simbolo backslash (\\)') #para escribir un backslash
print('in every programming language it starts with \"hello world\" ''') #para escribir comillas dentro de las comillas

"""# String con variables"""

name, surname, alias, age = "erick", "borges", "alecs", 23

print("me llamo:", name , surname)
print("mi edad es:", age,  "mis amigos me dicen:", alias)

print("mi nombre es {} {} y mi edad es {}".format (name, surname, age))
print("mi nombre es %s %s y mi edad es %d" %(name, surname, age))
print(f"mi nombre es {name} {surname} y mi edad es {age}") #esta es la mejor, la mas aceptada

"""# Strings como secuencia de caracteres
los strings son secuencias de letras unidas que forman palabras. tenemos distintas maneras de descomponer un string en cada una de sus unidades. sin embargo la manera mas simple de extraer cada miembro de un string es desempaquetarlo en distintas variables
"""

lenguaje = "python"
a,b,c,d,e,f = lenguaje
print(a)
print(b)
print(c)
print(d)
print(e)
print(f)

lenguaje = 123456
print(type(lenguaje))
lenguaje = str(lenguaje)
print(type(lenguaje))
a,b,c,d,e,f = lenguaje
print(a)
print(b)
print(c)
print(d)
print(e)
print(f)
lenguaje = int(lenguaje)
print(type(lenguaje))

primer_letra = lenguaje[0]
segunda_letra = lenguaje[1]
tercer_letra = lenguaje[2]
print(primer_letra)
print(segunda_letra)
print(tercer_letra)

"""#Recortando strings"""

lenguaje = 'python'
primeros_tres = lenguaje[0:3] #starts at zero index and up to 3 but not include 3
print(primeros_tres) #Pyt

ultimos_tres = lenguaje[3:6]
print(ultimos_tres) #hon

#otra forma Python
ultimos_tres = lenguaje[-3:]
print(ultimos_tres) #hon
primeros_tres = lenguaje[:-3]
print(primeros_tres) #hon

"""# Invirtiendo strings"""

saludo = 'hello, world!'
print(saludo[::-1])

"""# Saltando letras"""

lenguaje = 'python'
new = lenguaje[0:6:2]
print(new)

"""# Metodos con strings
Convertir la primera letra en mayuscula y unir cadena de caracteres
"""

text = 'aprendiendo'+'python'+'en'+'clase'
print(type(text))
text = 'aprendiendo python en clase'
print(type(text))
print(text.capitalize())

"""# Contar las veces que se repite un caracter"""

text = 'aprendiendo python en clase'
print(text.count('a'))
print(text.count('y', 7, 14))
print(text.count('en'))

"""# regresa la posicion donde se encuentra el caracter
si no se encuentra regresa -1
"""

text = 'aprendiendo python en clase'
print(text.find('y'))
print(text.find('th'))
print(text.find('am'))

"""# Actividad 03 strings
Genera palindromos y comprueba que efectivamente lo son
"""

print("Hola usuario")
text = input("por favor ingresar una palabra: ")
text = text.replace(" ", "") #se usa la funcion replace para juntar los espacios
print(text[::-1]) #se utiliza la funcion de invertir ::-1 ala hora de imprimir