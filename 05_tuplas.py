# -*- coding: utf-8 -*-
"""05_tuplas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vuO8EdnZm6GGFguLhvtPPuaJqRg3b43p

# Tuplas

Una tupla es una colección de diferentes tipos de datos ordenados e inmutables (inmutables). 

Las tuplas se escriben con corchetes, (). Una vez que se crea una tupla, no podemos cambiar sus valores. 

No podemos usar métodos de agregar, insertar, eliminar en una tupla porque no es modificable (mutable). 

A diferencia de list, tuple tiene pocos métodos. Métodos relacionados con las tuplas:

tuple(): para crear una tupla vacía
count (): para contar el número de un elemento específico en una tupla
index (): para encontrar el índice de un elemento específico en una tupla
operador: unir dos o más tuplas y crear una nueva tupla
"""

#syntax
empty_tuple = ()
# o usando el constructor de tuplas
empty_tuple = tuple()

"""# Declaracion de una Tupla"""

my_tuple = tuple()
other_tuple = ()

"""# Llenar datos y verificar tipo"""

my_tuple =(1, 2, 3, 'Erick', 'Borges', 'Aguilar', 'Morales', 'Borges')
print(my_tuple)
print(type(my_tuple))

"""# Contar posiciones"""

print(my_tuple[0])
print(my_tuple[-1])

"""# Elementos repetidos"""

print(my_tuple.count("Borges"))

"""# Unir tuplas"""

tpl1 = ('item1', 'item2', 'item3')
tpl2 = ('item4', 'item5', 'item6')
tpl3 = tpl1 + tpl2

print(tpl3)

"""# Insertar en una tuplas"""

frutas = ('banana', 'naranja', 'mango', 'limon')
print(frutas)
frutas.append('manzana')
print(frutas)

frutas = ('banana', 'naranja', 'mango', 'limon')
print(frutas)
frutas.insert(2, 'manzana')
print(frutas)

"""# Revisar posiciones"""

frutas = {'banana', 'mango', 'naranja', 'limon'}
print(frutas)
print('existe mango', 'mango' in frutas)

frutas.remove('mango')
print(frutas)

print(frutas)
frutas.remove(frutas[0])

"""# union"""

frutas = {'banana', 'mango', 'naranja', 'limon'}
vegetales = { 'tomate', 'papa', 'zanahoria'}
print(frutas.union(vegetales))

"""# interseccion"""

numeros = {0,1,2,3,4,5,6,7,8,9}
numeros_pares = {0,2,4,6,8,10,12,14,16}
print(numeros.intersection(numeros_pares))